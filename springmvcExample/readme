referenece:
    Document：
        ①https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/htmlsingle/
        ②springmvc-demo\referenceFile\课程九_SpringMVC+MyBatis高级框架技术.pdf
        ③process_3：https://blog.csdn.net/jsu_9207/article/details/51271799
        ④process_3.5：https://www.baidu.com/link?url=_QlTe2O95llrgr1xrqTcFJ624ySCvZL_oyVJSO_dT4ktbP6X1ObTVEUZ9H-NivoEMkqdYSA6qR25CGsYO6mIqq&wd=&eqid=b92a891b000588d1000000065af15314
    Video：
        http://tpcsc.ibeifeng.com/Job/Job/CourseDetail?id=80339a27-8244-4208-88bd-db5e0e60c49c&productId=d9d5a153-cb44-4361-9729-8ce7ebd2a41f&studyPlanArrangeId=a311a331-5810-40d5-bc3f-aabe1da9b267

process:
    1.了解Spring MVC架构以及请求流程
    2.环境搭建
        referenceFile_环境搭建.md：https://juejin.im/post/5a66ed0c51882573282192a6
        ①关于<context-param>：如果不给值，默认为applicationContext.xml，找不到则报错。
        ②关于<servlet>：
            <init-param>
                <param-name>contextConfigLocation</param-name>
                <!--其中<param-value>**.xml</param-value> 这里可以使用多种写法-->
                <!--1、不写,使用默认值:/WEB-INF/<servlet-name>-servlet.xml-->
                <!--2、<param-value>/WEB-INF/classes/dispatcher-servlet.xml</param-value>-->
                <!--3、<param-value>classpath*:dispatcher-servlet.xml</param-value>-->
                <!--4、多个值用逗号分隔-->
                <!--<param-value>classpath:spring/dispatcher-servlet.xml</param-value>-->
            </init-param>
    3.demo
        ①根据控制器Bean的名字将控制器映射到URL
            BeanNameUrlHandlerMapping
            SimpleUrlHandlerMapping
            ControllerClassNameHandlerMapping
            DefaultAnnotationHandlerMapping——弃用，改为将请求映射使用@RequestMapping注解的控制器和控制方法
        ②视图解析器
            将逻辑视图的名字与jsp页面进行匹配
            InternalResourceViewResolver
                在web应用程序的war文件中查找视图模板，视图模板的路径根据加完前缀和后缀的逻辑视图名称来确定
                prefix
                suffix
                【这里可以对比参考pdf中的MVC框架模型来理解。这里用了注解就不用用ModelAndView了，更简便。】
        ③参数传递
           Ⅰ@RequestParam：必须传
           Ⅱ直接通过方法参数传值：可传可不传
        ④在上个例子的基础上，将参数显示在页面上
            Map<String, Object>【一般不用】
            Model【常用】
        ⑤使用SpringMVC实现用户列表
            User
            HashMap
            @RequestMapping(value="/userlist", method=RequestMethod.GET)
        ⑥新增用户功能
            Get
            Post
            在<sf:form>中给定modelAttribute属性时需要增加“ model.addAttribute(new User());”【重点是思路】
            字符乱码控制：
                <filter>
                        <filter-name>encodingFilter</filter-name>
                        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
                        <init-param>
                            <param-name>encoding</param-name>
                            <param-value>utf-8</param-value>
                        </init-param>
                    </filter>
                    <filter-mapping>
                        <filter-name>encodingFilter</filter-name>
                        <url-pattern>/*</url-pattern>
                    </filter-mapping>

